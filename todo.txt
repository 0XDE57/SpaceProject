***the vision***
In space you fly around to explore planets and star systems, and combat other ships.
For Combat/fighting, my vision is to have some elements of reactive fighter style like smash bros
where you can attack, dodge and use shield. Maybe you can upgrade your ship or swap out components
for different abilities.

In space there will be asteroids floating around. Kinda like the original arcade style asteroids. Just
arbitrary convex polygons. But when they break ideally they would shatter in a way that all the pieces
that break off can make up the original object. To achieve this; voronoi diagrams! A cool property of voronoi
diagrams is that the polygons it creates are always convex by nature. When an asteroid is shot by player,
create a set of random points (perhaps concentrated where the bullet hits) within the asteroids polygon.
From those points make a voronoi diagram within the original polygon, then break up the asteroid into the resulting pieces.
Those pieces can also be hit and broken down further with the same process. Until a certain threshold of
smallness where we actually destroy the object because there's no point in breaking it own further.
Upon destruction, chance to drop items/resources for the player to pick up.
Maybe the asteroid contains resources or items which can be used by the player.

Asteroids could spawn as belts around stars. Or a random asteroid field floating through space.
A set of asteroids in a group, for the player to mine/destroy.

Players can land on planets. Planets are generated by a tile-able noise so that the edges of the map
meet. The goal is to have a finite 2D map where you can walk continuously in one direction and eventually
come back around to where you started. This is achieved via OpenSimplexNoise, a bit of trig and modulus
magic for rendering! But there are some other technical challenges this presents that I have not yet
addressed. see https://simonschreibt.de/gat/1nsane-carpet-2-repetitive-worlds/

On the planet the player will be able to build their base. Mine for resources. Build/upgrade their ship.
Currently space is fairly empty. Worlds are very empty. Just test objects while I flesh out my ideas
and prototype systems.


::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
todo...
should start documenting and specking out the features and where its headed.
It's half in notes, half in my head, and half in code.

***architecture***
Uses an ECS. If you are unfamiliar with the concept of an Entity Component System, start here:
    https://github.com/libgdx/ashley/wiki/Framework-overview
Components are pure data, no implementation.

Systems are dynamically loaded and unloaded per context. Space and World can have different systems.
    eg: don't need an orbit system when on a planet.
Mobile and Desktop can have different systems.
    eg: don't need to render touch control on desktop
See SystemsConfig for defining system priories and loading properties such as when to load and
if they should be active when paused.


One goal is to have everything highly configurable. (and perhaps I have gone too far in this direction...?)
Data Directory (...\SpaceProject\android\assets)
    \config:
        plain text json files that define all values for game. these files will be written on first run of the game.
        if no config exists, default is loaded and written to disk. if config exists on disk, it is loaded.
        [default always loaded when debugDevForceLoadDefault = true]
            CelestialConfig: defines star system generation rules
            DebugConfig: defines settings like show debug rendering
            EngineConfig: define physics and rendering constants
            EntityConfig: define generation parameters for entities
            KeyConfig: define input keycodes
            MinimapConfig: define colors and behaviors for minimap
            SystemsConfig: define system loading priorities and properties
            UIConfig: define ui element colors and positions
            WorldConfig: define terrain generation parameters (in progress)
    \fonts: fonts for UI
    \shaders: not really used yet, just playing around
    \sounds: (todo)
        each sound effect gets it's own folder.
            if no sound in folder, dont play
            if one sound in folder, play that
            if multiple sound in folder, play random
            allow user configurable chance? what about effects/volume? NO! this is overkill for now but just an idea. Keep it simple...
        potential structure / implementation might look like
            music
                track a
                track b
            effects
                effect a
                    effect1.wav
                    effect2.wav
                    effect3.wav
                effect b
                effect c
    \skin: (not implemented, proposed) scene 2d skin
    \save: (todo) save game files
        todo: figure out a sensible structure
        https://github.com/libgdx/libgdx/wiki/Saved-game-serialization
        save/<galaxy seed>/galaxy?
            /points of interest?
            /celestialBodies?
            /body/<planetseed>?
        save/<seed>/entities?
        save/<seed>/planet
            heightmap
            world properties
            entities


Space Background Rendering (broken)
	Simple but effective (but also broken when zoom out):
	3 parallax layers
		stars close
		stars far
		noise far
	Background color is set based on camera positioning.
		Just some combinations and ratios of red, blue and green that I played around with until it looked nice.


Noise Generation
	Noise is heavy to generate at runtime so it's done in background threads.
	Once generated, it's picked up by SpaceLoadingSystem who then creates a texture from the noise.
	You can specify how many simultaneous threads you would like to allow in EngineConfig.
	Todo: save textures/noise so it's only generated the first time. Load from disk.
	For dev purposes, just generate ad-hoc for now.


Screen transition logic/stages overview
One of the trickier parts of the engine. Animation states for transition, and dynamic system loading/unloading.
When animation hits transition state, it calls the system loader and loads/unloads relevant systems based on SystemsConfig
TODO: should make a proper sequence diagram for this.
TODO: consider breaking up states into different components?
    eg: ShrinkComponent,GrowComponent for sprite + body

	Transition action (key press, virtual button on mobile)
	ControlSystem()
		if in space
			landOnPlanet()
				find planet
				add ScreenTransitionComponent -> anim stage = shrink
			takeOffPlanet()
				add ScreenTransitionComponent -> anim stage = transition

	ScreenTransitionSystem()
		landOnPlanet:
			shrink: shrink ship sprite to give illusion of landing
			zoomIn: zoom in camera
			screenEffectFadeIn: fade screen to white
			transition: trigger GameScreen to switch to planet. load and unload relevant systems.
			load: (todo: ensure planet map loaded before allowing play)
			screenEffectFadeOut: fade white back to screen
			pause: brief pause for effect
			exit: player get out of ship
			end: remove transition component
		takeOffPlanet:
			screenEffectFadeIn: fade screen to white
			transition: trigger GameScreen to switch to planet. load and unload relevant systems.
			sync: ensure find planet landed on is loaded (based on seed), ensure found and texture loaded before allowing play
			zoomOut: zoom camera from 0 to normal
			grow: grow ship sprite from 0 to give illusion of taking off planet
			end: remove transition component


Scale of the universe.
Currently somewhat arbitrary. Just selected values that make sense at the time and feel ok.
I originally wanted to play with n-body physics and have an "infinite" universe....hahahaha NO! Focus!
So while in space, we are in a finite galaxy. Points of interest are generated relative to 0,0.
Go too far into the void, and enjoy broken rendering and physics, courtesy of floating point arithmetic rounding!
Todo: Need to make a more standard definition for everything:
    sprites and unit: how big should a ship or player be in relation to the universe / planets?
    planets: how big should a planet be?
    distances between planets: how long should the player spend traveling between systems and planets and stars?
    Values need to be chosen that make sense for gameplay. Considering combat, base building, interstellar travel.
    Should optimize feel for spaceship combat as that will be a large part of gameplay.


AI: currently primitive placeholder systems to flesh out ideas.
They can't aim properly, need to predict where player will be. Lead target.
And much more....problems for later.


::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Legend:
    [ ]     = not started
    [...]   = in progress
    [x]     = complete
    [!,?,*] = notes, questions, or exceptions

todo: focus! i keep jumping between ideas and features and never finish anything
***the plan***:
Spaceship combat will be a core part of gameplay. So lets focus on cleaning that up first.
    End goal: make combat fun. make flight and movement fun. and look a little better
    [...] respawn
        [x] for now, just place back at origin 0, 0
        [ ] how to handle death? start on planet back at base? start at a space station?
            [ ] could have a "home planet" and just spawn from there like transitionsystem takeoff
        [ ] notify AI that are stuck attacking nothing and should return to dumbwander or previous task
    [...] fix shield physics
        [...] if collide with bullet, shrink/destroy shield
        [ ] fix radius is not consistent. rotation of body affects size of shield. don't trust calculateBoundingBox()?
        [ ] grow/shrink. looks like cant resize bodies in box2d? destroy and recreate each frame seems inefficient likely
        [ ] if collide with another body with significant difference in velocity
            and if other has HealthComponent, do damage using velocity as damage factor
            [ ] shield dash bash? high impulse forward, then activate shield to ram other objects and do damage to them
    [...] make bullets better
        [...] fix grow bullet
            [x] AI not detecting hit
                [ ] ai doesn't know to release grow cannon, only tuned for regular cannon
            [x] tune damage
            [x] tune size
            [ ] lock on nearest target when max
                [ ] visual in hudsystem for tracked entity
                [ ] predict angle to aim to hit based on pos and velocity
                [ ] steering behavior AI?
            [x] bullet jitter in front of ship when moving, not visible with vsync disabled. lerp?
        [...] more visible
            [ ] particle trail
            [ ] particle affect for absorb while growing
    [ ] particle effect for ships engine: fire or something neat
        [ ] particlesystem and emitter components?
        [ ] mess around with the particle editor
    [...] control tuning
        [x] basic controller input
            [ ] allow hot-plugging, currently handled by commenting out system is annoying, multiplexer? and what about stage...
            [...] basic Xbox 360 support
                [ ] not detecting DPAD buttons
                [ ] double tap right left bumpers for barrel roll
                [ ] right stick camera control, click to reset
            [ ] move to getMapping() but seems im on an older lib?
        [ ] hyperdrive should be charge instead of instant activate [1]
            [ ] needs control for mobile
        [ ] new control?: hold shift to charge, then forward + release charge for boost: impulse
        [x] change shield from alt to space
        [ ] shield bash: double tap forward(or direction) and hold to rush, then shield do shield action [B] within time window of dash, and hold
    [ ] add basic asteroids (arbitrary poly)
        [ ] spec spawner for asteroid. begin make asteroid
    [ ] fix AI a bit (lead shot)
    [ ] lag camera behind movement a little for visual effect, especially when dodging for more visual impact
    [ ] fix camera: combat camera
        right now manually zooming in an out when fighting is a bit clunky and jarring.
        implement an auto lock on camera which will adjust the zoom to include both the player
        and the enemy within frame, even have the camera back the player into the opposite side of the
        screen relative to enemy, to keep more zoom and attention on the combat. focus!
        if (in combat) {
            enemyEntity.add(CombatFocusComponent)
        }
        camera systems looks for entities with CombatFocusComponent, auto adjust zoom so entity with combat focus
        is within screen view.
        consider multiple enemies, 3 on screen? include all will make zoom far and less focused, so probably some sort of
        dynamic focus, maybe who gets shot last has focus? todo: study cam mechanics for smashbros / project m style combat
        thresholds for how close to focus near the edge
        still allow manual override with scroll, with perhaps a timer to focus back in, or when a new enemy joins
    [...] fix background space rendering
        [...] POC star shader with fullscreen quad in separate project
            [ ] bring into this project and replace old system
    [ ] sound: there is no sound in the vacuum of space, therefore music sound effects are not required!
        [ ] lol jk, sound will eventually exist
    [...] detangle, some things are messy over time
        [...] Ship control system doing too much
            [x] move growcannon to own system
            [ ] move normal cannon to own system
            [ ] can refactor stuff in control component into their respective components just like grow and hyper?
            [ ] barrel roll and 3d sprite stuff into own system?
        [...] HUD system doing too much
            [ ] shouldn't have gamemenu and input listener?
        [ ] entity factory refactor into entity types


---ENGINE---
[...] physics and movement
    [...] move to box2d
        [...] move logic to new physics
            [...] shield broken
                [x] render
                [...] physics and collision
            [...] dodge
                [ ] adjust feel, its kinda clunky right now. needs more JUICE!
                    https://www.youtube.com/watch?v=Fy0aCDmgnxg
            [...] space tile scale bad and tile loading broken
                [x] fix load/unload and scale
                [...] dust layer has render issue, tiles overlapping edges/gap
        [...] figure out scales and values that make sense and work with the b2d engine (consider scale of space)
            [ ] create unit/body scale helper
        [ ] move to filters? https://gamefromscratch.com/libgdx-libgdx-tutorial-13-physics-with-box2d-part-4-controlling-collisions-using-filters/
    https://gamedev.stackexchange.com/questions/23834/how-to-properly-implement-message-handling-in-a-component-based-entity-system
    [x] fixed time step (necessary for multiplayer?)
        [ ] interpolation
        https://github.com/libgdx/ashley/pull/215
        https://github.com/libgdx/ashley/pull/216
        https://gafferongames.com/post/fix_your_timestep/
        http://gameprogrammingpatterns.com/game-loop.html
        http://www.koonsolo.com/news/dewitters-gameloop/
    [?] note to self, was my old physics broken due to #5048?
        I dropped my physics because the impulse was so weird, i did infact use Intersector.overlapConvexPolygons() in CollisionSystem.java.overlaps()
        https://github.com/0XDE57/SpaceProject/blob/1a764f9aaa405ba18341ad35c2a75b4ecd02a535/core/src/com/spaceproject/systems/CollisionSystem.java
        [ ] todo: confirm that im not crazy? because i spent a lot of time moving to box2d if this is true lol.... thats ok.

[...] config
    [x] config manager, save and load all configs
    [...] config UI
            [...] nice way to view and edit configs
                [ ] fix layout
                [ ] hook up load save undo
    [...] move more things to config
        [ ] Ships are currently hardcoded by Entity factory
            can we find a way to generate entities from config.
                - consider ranges,
                - consider space vs planet differences (eg: physics)...
                - consider mobile vs desktop? maybe?
            eg:
            Ship {
                SeedComponent{},
                TransformComponent {

                },
                Sprite3DComponent {
                    shipSize = rand range(x,y)
                }
                PhysicsComponent {
                    linearDamping, (when on planet, will be 0 in space)
                    angularDamping (when on planet, will be 0 in space)
                }
                CannonComponent {
                    ammo,
                    damage,
                    fireRate,
                    cannonSize,
                    cannonVelocity,
                },
                HealthComponent {
                    maxHealth
                },
                MapComponent {
                    color,
                    distance
                }
            }

            and what about multi entity groups? eg System
            createPlanetarySystem {
                numPlanets = range(0,10),
                distFromBarycenter = range(0, 10),
                distFromNextEntity = range()
            }

            or in theory allow scripting?
            lets not reinvent this wheel.
            stop brain. this is getting ridiculous.
        [x] debug
        [x] minimap
        [x] engine (threads, physics, renderscales)



[...] refactor screen transition
    [ ] ready / sync / load state. should all be in transition system?
        [x] finish transition animation, should have screen effect for polish and to hide loading/level change. goal feel a little more seamless
            (fade to white/pixelate shader during landing, load map (can wait here for a second if not finished generating, when generations finished start white then fade normal, continue)
        [ ] WorldRenderingSystem shouldn't be responsible for loading map: loadMap(). should be where?
        [ ] bug: had an instance where take off rogue planet ended up with no ship and seemingly wrong co'ords
            see: ScreenTransitionSystem.syncLoadPosition()
        [ ] bug: sometimes landing and take off unreliable
            cannot find seed
            cannot find seed
            cannot find seed
            this bug is driving me insane, but there's still some transition and loading details to work out


[ ] "Persistence Engine" what to do with rest of universe when on a planet? or stuff going on on planets when we are in space?
    genericize and make work land and take off work for AI, system doesn't support non-player world switching
    dumb loop where AI lands on planet, kept in some kind of background
    processing state/alt engine, wait a second then take off to test all is working correctly
    background engine meant to be low processing effort (eg: ultra dumbed down AI or simulations, no rendering, no physics, just states and events) to keep track of important entities
    and states between space and worlds. eg: give entity important flag component to keep relevant, if dont have flag dont care and remove when switch
    will be useful for persistence, AI and story type events.
    //Example scenario:
    //    you are on planet, you attack an AI, Ai comes after you. But you leave in your ship.
    //    then AI gets TimedPersistenceComponent and will remain on planet for 5 minutes waiting for you, because angry!
    //    maybe they will come after you. this could be very simple. we can fake intelligence in a background system in persistence engine
    //
    eg:
    Engine persistenceEngine.
    if (player switch screen) {
        //move important entities from main to background processing
        for each entity in mainEngine {
            if (entity has PersistenceComponent) {
                persistenceEngine.Add(entity);
            }
        }
        //move relevant entity from background processing to main
        for each entity in persistenceEngine {
            if (entity has PersistenceComponent) {
                if (is persistence relevant to new context) {
                    //example relevance:
                    //player in space, important entity on planet
                    //if land on planet with important entity, load into actual engine
                    mainEngine.Add(entity);
                    //could be more nuanced, like perhaps entity is only loaded when event triggers it
                    //or specific location on planet. dunno till start implementing.
                    //possibly have multiple engines handling contexts? (thats dumb and overkill. keep it simple.)
                }
            }
        }
    }
    if (AI switch screen) {
        //similar thing to above
        //if relevant load it, else keep in background

        //if not important, remove from engine, forget about existence
    }
    --- alternatively ---
    process entities from save files?, can have a system process important things from save

[ ] minimap should show heightmap of world when on planet
    (fog of war) start out with grayscale pixelated version, when area visited then render full map and color

[...] galaxy generation inspired by fibonacci spiral
    [...] test screen to generate spiral
    [ ] generate set of points that are concentrated near center, and near arms of spiral
    [ ] implement generation into game
    [ ] make a screen animation


[...] fix texture / map loading
    [ ] save load noise so it doesnt have to be generated
    [ ] clean up star save/load
    [!] bug: when play with generation settings in TestNoiseScreen, seems to effect map/tile generation in game
        ! actually for now this is a convenient bug for testing


[...] rendering system
    [ ] consider merging rendering system (SpaceRendering & World rendering)?
        probably keep separate because world may need special rendering for the torus wrapping effect
        also we don't necessarily need 3d in world view, won't be doing barrel rolls on land. (maybe we want some 3d buildings though? for depth? probably not
    [...] fix render priority (z-order)
          [X] moved into separate variable
          [x] define proper heights for importance as current values are somewhat arbitrary
          [ ] this is now a bit more complex, as there is a mix of 2d sprites and 3d renderables, that are rendered in separate batches (2d then 3d overlay).
              to mix the z between them may require multiple batch passes, or migrating to 3d, also shaperenderer on top of that...
    [ ] better star rendering
        it's currently static just like planets, but I want it to shift the z, exactly like the title screen background
            com.spaceproject.screens.animations.NoiseAnim
        could be done on gpu even:
            https://www.shadertoy.com/view/XscGzl
    [ ] better planet rendering
        inspiration: https://github.com/yurkth/astraea
    [ ] fix space parallax system, generating pixmaps on the fly is slow, try to replace with shader
            maybe something like this:
                https://www.shadertoy.com/view/ltXSDN
                https://www.shadertoy.com/view/ldKGDd
                https://gamedev.stackexchange.com/questions/146098/2d-parallax-scrolling-through-glsl-shader
                https://badlogicgames.com/forum/viewtopic.php?f=11&t=11419
            or something like this:
                https://wwwtyro.github.io/space-2d/
                https://github.com/wwwtyro/space-2d
        [x] background space color fade to black when zoom out (temporary until better space background approach is implemented)
        [ ] experiment: can we make the background tiles just not zoom out? use a different batch perhaps?



[ ] voronoi, for destructible asteroids and world generation (can be used for tectonic plates / countries / biomes)
    https://www.badlogicgames.com/forum/viewtopic.php?f=11&t=22784 (my old thread)
    https://github.com/mjholtzem/Unity-2D-Destruction
	http://www.alanzucconi.com/2015/02/24/to-voronoi-and-beyond/
	https://stackoverflow.com/questions/20104779/libgdx-create-texture-from-overlay-using-pixmap
	https://pvigier.github.io/2018/11/18/fortune-algorithm-details.html
    http://www-cs-students.stanford.edu/~amitp/game-programming/polygon-map-generation/
    https://leatherbee.org/index.php/2018/10/06/terrain-generation-3-voronoi-diagrams/
    texture and create child bodies from parent:
        https://www.emanueleferonato.com/2012/01/17/create-real-explosions-with-box2d-adding-textures/
        https://www.emanueleferonato.com/2012/03/05/breaking-objects-with-box2d-the-realistic-way/

[...] wrap planets properly (LOCAL COORDINATE SPACE?)
    https://www.reddit.com/r/gamedev/comments/1gi6np/magic_carpet_style_infinite_wrapping_terrain/
    https://simonschreibt.de/gat/1nsane-carpet-2-repetitive-worlds/



[ ] fix floating point errors in deep space caused by large world coordinates and small frame times is affecting movement physics: epsilon / truncating errors
    https://randomascii.wordpress.com/2012/02/13/dont-store-that-in-a-float/
    https://www.youtube.com/watch?v=mXTxQko-JH0&t=4m18s



[ ] devmode and play mode
    [ ] DevMode
        -dont load save files
        -hardcoded seed
        -forced test entities
        -forced close star system
    [ ] PlayMode
        -load save
        -random seed
        -no hardcoded entities. entities should come from spawning systems instead
[ ] new CombatTest debug screen
    [ ] one on one with an AI for prototyping combat and movement mechanics and feel
    [ ] AI vs AI?




[ ] optimization
    [ ] look at pooled engine/sprites
        [ ] eg bullets. current cannon creates new sprite for each shot. bad!
    [ ] model cache / renderable for 3d sprites
        https://xoppa.github.io/blog/a-simple-card-game/#reduce-the-number-of-render-calls
    [ ] planets are rendered offscreen needlessly -> cull frustum
    [ ] something is funny with the memory, it climbs then resets in a cyclical fashion
        I have a feeling this is a poor use of 'new' somewhere and when the memory resets its the GC cleaning it up
    [ ] fonts should all be in skin, ensure fonts are not duplicated/loaded twice
    http://t-machine.org/index.php/2014/03/08/data-structures-for-entity-systems-contiguous-memory/
    http://unseen-academy.de/snippet_component_system.html
    https://github.com/junkdog/entity-system-benchmarks#entity-system-benchmarks


[ ] investigate possible bug in ashley.
    Found 2 weird cases related to families / listeners.
    I would expect all references to a system/family membership to be when a system is removed from the engine.
    This may be intended behavior and I am using ashley wrong, need to reproduce these in a new project to confirm...
    In the context of this game, both occurrences where triggered when going transitioning between space/world which involves loading and unloading specific systems.
    https://github.com/0XDE57/SpaceProject/commit/012bd0bdea4ef5c95b6f8b9454e96a7007d4c7ac
    [A] scenario A:
        1. create engine.
        2. add a new instance of system (SystemA) to engine that subscribes to a family
        3. create a new engine (re-instantiate the original)
        4. add a new instance of system (SystemA) to engine that subscribes to a family.
        5. this new system will not pick up those entities in the family, where it should
        * solution: engine.removeAllEntities(); before re-instantiating engine and system. this resolves the issue.
    [B] scenario B:
        1. create engine
        2. add a new instance of a system that is an entity listener
        3. remove that system
        4. add a new instance of that system
        5. remove again = crash on System.entityRemoved() when Engine.removeAllEntities():
            Exception in thread "LWJGL Application" java.lang.NullPointerException
            	at com.spaceproject.systems.SpaceLoadingSystem.entityRemoved(SpaceLoadingSystem.java:91)
            	at com.badlogic.ashley.core.FamilyManager.updateFamilyMembership(FamilyManager.java:117)
            	at com.badlogic.ashley.core.Engine.removeEntityInternal(Engine.java:223)
            	at com.badlogic.ashley.core.Engine$EngineEntityListener.entityRemoved(Engine.java:257)
            	at com.badlogic.ashley.core.EntityManager.removeEntityInternal(EntityManager.java:110)
            	at com.badlogic.ashley.core.EntityManager.removeEntity(EntityManager.java:53)
            	at com.badlogic.ashley.core.EntityManager.removeAllEntities(EntityManager.java:72)
            	at com.badlogic.ashley.core.Engine.removeAllEntities(Engine.java:98)
        * Solution: engine.removeEntityListener(the system) when removing system


[ ] i should prolly start making some unit tests at some point...

---GAMEPLAY & DESIGN---


[...] SHIPS
    [...] COMBAT
        [...] 3D roll animation for dodge / barrel roll
                [...] scale bounding box during rotation
                [ ] adjust feel, it doesn't quite feel very dodgy, maybe try lagging the camera behind the roll
                [ ] clean up: should move values to config
                [ ] clean up: optimize rendering -> ModelCache
                [ ] mobile/touch UI way of activating dodge, a swipe on the joystick may be intuitive
        [ ] bullets should come from a gun rather than magically from ship
        [ ] weapon types
            [x] basic cannon
            [x] grow cannon shoot circles/rectangles with radius relative to damage "weight" of projectile (damage = size * velocity * typeMultiplier)?
            [ ] L cannon, touhou style multiple bullet cannon
            [ ] Laser cannon
    [ ] engine mode:
            [x] local/combat (slow, for interacting with object near, landing planets, fighting)
            [...] travel/cruise (medium, for navigating within a system, planet to planet, avoid/escape, faster travel)
            [ ] hyper/warp   (fast, warp to other systems, can't turn, can't fight)

    [ ] ship generation
        [ ] fix ship edges to use entire width of texture
	    [...] wings
	    [ ] engines
	    [ ] weapons
	    [ ] details: eg: lines, another layer on top for depth/windshield type thing, different stuff on underside of sprite
	    [ ] generation styles and classes, perhaps come up with some kind of classes of ships (cargo, highspeed traveler, tank/war machine, passenger, personal, commercial...)
	    inspiration:
            http://davebollinger.org/works/pixelspaceships/
            https://www.reddit.com/r/gamedev/comments/2tavse/2d_procedural_spaceship_generator/



[...] planet generation
    [ ] add temperature variable to planet
        [ ] temperature determined by distance from star
            [ ] for now simple linear, close to planet = hot, far from planet = cold
            [ ] if want more advanced, have star temperature based of distance from galaxy center
                then that would also affect star temperature.
                for inspiration see:
                    https://beltoforion.de/article.php?a=spiral_galaxy_renderer
                    https://github.com/beltoforion/Galaxy-Renderer
        [ ] hot planets can be lava / deserts, cold planets can be ice n snow.
            stuff in between can be "normal" (green, water, etc)
        https://en.wikipedia.org/wiki/Circumstellar_habitable_zone
	[ ] rings around planets? (like saturn)
	[...] moons/satellites
    [ ] research planet attributes //size, temperature, pressure, atmosphere/elements(https://en.wikipedia.org/wiki/Astronomical_spectroscopy)...etc
	inspiration and references:
	    http://www.entropicparticles.com/6-days-of-creation/
	    https://plaxdev.wordpress.com/2017/05/04/procedurally-generating-islands/
	    https://www.reddit.com/search?q=%28perlin|simplex|opensimplex%29+noise&sort=new
	    http://ronvalstar.nl/creating-tileable-noise-maps/ <--looping noise
	    https://www.gamedev.net/blog/33/entry-2138456-seamless-noise/ <--looping noise
	    https://gamedev.stackexchange.com/questions/23625/how-do-you-generate-tileable-perlin-noise <--looping noise
	    http://developworlds.com/blog/2015/05/28/procedural-tilemap-generation/
	    https://flafla2.github.io/2014/08/09/perlinnoise.html
	    http://devmag.org.za/2009/04/25/perlin-noise/
	    http://blog.kaelan.org/randomly-generated-world-map/ <--biome
	    http://freespace.virgin.net/hugo.elias/models/m_perlin.htm
	    OpenSimplex: https://gist.github.com/KdotJPG/b1270127455a94ac5d19
	    new KdotJPG noise!: https://github.com/KdotJPG/New-Simplex-Style-Gradient-Noise

[ ] space stuff
    [ ] various astronomical bodies
        https://en.wikipedia.org/wiki/Astronomical_object#Categories_by_location
	[ ] stars kill on touch (hot!)
	    unless maybe you have an upgraded ship that can handle it?
	[ ] wormhole (teleport)
	    [ ] for now just render a circle
	[ ] blackhole (death)
	    place at center of galaxy
	[ ] dust/noise
	[ ] light specs/debris,details


---DEBUG---
    [ ] in game console
        [ ] show debug output
            redirect all gdx.log calls?
        [ ] commands
            eg: /create entity <ship>
                /add component <component> <entitity id>
                /enable/disable system <"system name">
                /setcamfocus <entity>
                /takecontrol <entity> (set control /input focus, if has AI, override (or maybe swap with player would be cool)
                /transfercomponent <component> <entityFrom> <entityTo>
    [...] engine viewer
        [...] arrow navigation and menu expansion
            [x] fix some edge cases on up and down and expansion of empty nodes
            [ ] nothing select, re-select last selected / refocus
            [ ] press and hold up & down
        [ ] aesthetics and usability
            [ ] on key navigation, if selection out of scrollpane view, scroll to make it visible
            [ ] fix arrow expand image on entity node pre/post expand
            [ ] fix scroll bar to show
            [ ] focus on mouse over
        [ ] options
            [ ] poll rate
            [x] toggle history highlighting
            [ ] expand all collapse all
        [...] history (like PE), if added, green for a second. if removed, red for a second
            [ ] systems should get history too, currently only entities working
            [ ] include children
        [x] add count to system and entities node eg: Entities (57), Systems (12)
        [ ] filter for components, bonus points for values (eg: all entities with a health component where component.health > x)
        [ ] possibly a generic reflection object explorer
        [ ] watch window (when node is highlighted, on key or watch button, copy node into its own focused window (including children)
        [ ] field editing
        [ ] add / remove objects
    [ ] FPS,memory,entity graph
        [ ] profiler: https://github.com/libgdx/ashley/pull/215


---INPUT---
    [ ] keyboard navigation for menus
        [...] debug menu
        [...] main menu
            [x] hotkeys
            [ ] navigation and selection
        [ ] title menu
    [ ] controller/gamepad input support
        https://github.com/libgdx/libgdx/wiki/Controllers
	    https://gist.github.com/nhydock/dc0501f34f89686ddf34
    [ ] mobile
        [ ] if player bounds overlap vehicle, show enter button on touchUI/hud
        [ ] if in vehicle show exit button (if can get out? must be over platform/spacestation? jetpack?)
        [ ] pinch-pull to zoom in-out on touch
        [ ] test touchUI on different screen sizes/resolutions
        [ ] set engine speed max to multiplier on android?
        http://libgdx.badlogicgames.com/nightlies/docs/api/com/badlogic/gdx/input/GestureDetector.html
        http://tutorial-libgdx-android.blogspot.com/2014/02/inputs-handling-1st-part.html


---UI---
    [...] map
        needs more details, select planets and get info, set way points
    [...] menu menu
        [x] pause / freeze game
        [...] settings and config
    [ ] player manager/inventory/shipbuilder thingy
    [ ] career event timeline stats

---GRAPHICS---
[ ] particles
    https://github.com/rockbite/talos
[ ] shaders
	https://github.com/mattdesl/lwjgl-basics/wiki/Shaders
	https://github.com/mattdesl/lwjgl-basics/wiki
	https://www.shadertoy.com/view/XscGzl <--use for stars
	http://www.alanzucconi.com/2015/07/01/vertex-and-fragment-shaders-in-unity3d/
	http://www.alanzucconi.com/2016/01/27/arrays-shaders-heatmaps-in-unity3d/
	http://wwwtyro.net/2016/10/22/2D-space-scene-procgen.html
    http://www.allpiper.com/2d-selection-outline-shader-in-libgdx/

http://devmag.org.za/2012/07/29/how-to-choose-colours-procedurally-algorithms/



//fonts
http://www.fontsquirrel.com/




