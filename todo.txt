---ENGINE---
[...] Architecture
    [...] consider refactoring space and world view to be simply load and unload systems as needed instead of wiping out everything
        load base systems, then load/unload world and space systems on the fly. use priority to keep order
        it would probably fix some of the screen transition issues and simplify it.
        - pros:
            * eliminates duplicate code
            * might make things simpler and cleaner and eliminate certain classes of bugs
            * why wipe out listeners and such
        - cons:
            * may introduce another class off problems
        look at transitions system flow:
        from space:
            add transition component

    [ ] consider merging rendering system (SpaceRendering & World rendering)?
        because they are basically duplicates which the difference of background tiles
        or at least have them share rendering functions as the drawEntities() & draw3DRenderables() are identical between them
        - pros:
            * eliminates duplicate code
            * might simplify some things
        - cons:
            * may introduce other issues
            * more responsibility for one class...
        alternatively, split up rendering type into difference systems? not sure yet
        what happens in refactoring space and world will affect this. need to think more about it

[ ] physics and movement arch
    [ ] combine BoundsSystem & CollisionSystem (doesn't make sense to be separate)
    [ ] extract physics out of CollisionSystem (collision should notify, physics should apply impulse)
    [ ] extract damage out of CollisionSystem (collision should notify, a CombatSystem(?) will pickup)
    [ ] combine physics into MovementSystem (listen for collide event)

[...] fix texture / map loading
    [x] seed based load instead of position
    [ ] clean up star save/load
    [x] fix thread generation to be limited (probably by core count) threadpool?
    [x] planets load from cache
    [ ] prevent generating duplicate seed when one is in process of being created but not yet created (multiple threads trying to make the same data)
    [ ] clean up
    [!] bug: when play with generation settings in TestNoiseScreen, seems to effect map/tile generation in game
        ! actually for now this is a convenient bug for testing

    [...] fix land/take-off
        [ ] transition feels unreliable
            [ ] bug: landed on planet which had finished generating, but did't load (no map found)
                see: WorldRenderingSystem.loadMap() (also rendering shouldn't be responsible for loading...)
            [ ] bug: had an instance where take off rogue planet ended up with no ship and seemingly wrong co'ords
                see: ScreenTransitionSystem.syncLoadPosition()
        [ ] bug: shrink sometimes doesn't scale properly or at all
        [ ] pause stage is also now broken, need to reset timer
        [ ] nested orbit: consider children of children eg: satellite->moon->planet->star
        [ ] finish transistor animation, should have screen effect for polish and to hide loading/level change. goal feel a little more seamless
            (fade to white/pixelate shader during landing, load map (can wait here for a second if not finished generating, when generations finished start white then fade normal, continue)
        [...] genericize and make work land and take off work for AI, system doesn't supports non-player world switching
            dumb loop where AI lands on planet, kept in some kind of background
            processing state/alt engine, wait a second then take off to test all is working correctly
            background engine meant to be low processing effort (eg: ultra dumbed down AI or simulations, no rendering, no physics, just states and events) to keep track of important entities
            and states between space and worlds. eg: give entity important flag component to keep relevant, if dont have flag dont care and remove when switch
            will be useful for persistence, AI and story type events.

            eg:
            Engine persistenceEngine.
            if (player switch screen) {
                //move persistent from main to background processing
                for each entity in mainEngine {
                    if (entity has PersistenceComponent) {
                        //eg: attacked an AI, AI gets TimedPersistenceComponent and will remain on planet for 5 minutes waiting for you
                        persistenceEngine.Add(entity);
                    }
                }
                //move relevant entity from background processing to main
                for each entity in persistenceEngine {
                    if (entity has PersistenceComponent) {
                        if (is persistence relevant to new context) {
                            //example relevance:
                            //player in space, important entity on planet
                            //if land on planet with important entity, load into actual engine
                            mainEngine.Add(entity);
                            //could be more nuanced, like perhaps entity is only loaded when event triggers it
                            //or specific location on planet. dunno till start implementing.
                            //possibly have multiple engines handling contexts?
                        }
                    }
                }
            }
            if (AI switch screen) {
                //similar thing to above
                //if relevant load it, else keep in background

                //if not important, remove from engine, forget about existence
            }

[...] rendering system
    [...] fix stuff moving ahead of camera
        [x] ship - fixed
        [ ] player - still jumps ahead of camera. (this may be caused by adding directly to pos instead of vel/accel?)
        [x] shaperenderer - shield moves ahead of camera
        [ ] projectiles from ship - moves ahead of ship
    [...] fix render priority (z-order)
          [X] moved into separate variable
          [ ] define proper heights for importance as current values are somewhat arbitrary
          [ ] this is now a bit more complex, as there is a mix of 2d sprites and 3d renderables, that are rendered in separate batches (2d then 3d overlaye).
              to mix the z between them may require multiple batch passes, or migrating to 3d, also shaperenderer on top of that...
    [ ] should consider merging SpaceRenderingSystem & WorldRenderingSystem because they are basically duplicates which the difference of background tiles
        or at least have them share rendering functions as the drawEntities() & draw3DRenderables() are identical between them



[ ] GameScreen is responsible for too much.. when transition is fixed up, come back and clean up
    [ ] entity creation should happen in an entity loading system (with maybe exception to the player)
    [ ] universe and noise pool stuff should happen elsewhere (like probably in universe)


[...] rotation impulse
    I can collide polygons, but they don't account for rotation and point of contact...
    [...] DIY?
        http://www.randygaul.net/2013/03/27/game-physics-engine-part-1-impulse-resolution/
        https://stackoverflow.com/questions/11654990/2d-physics-engine-collision-response-rotation-of-objects

    [ ] move to box2d?
        seems overkill and would involve a lot of re-writing... but it will be better than anything i can write myself
        but i really dont want to rewrite a bunch of stuff...

[ ] fixed time step (necessary for multiplayer?)
    https://github.com/libgdx/ashley/pull/216
	https://gafferongames.com/post/fix_your_timestep/
    http://gameprogrammingpatterns.com/game-loop.html
    http://www.koonsolo.com/news/dewitters-gameloop/


[ ] voronoi, for destructible asteroids and world generation (can be used for tectonic plates / countries / biomes)
    https://www.badlogicgames.com/forum/viewtopic.php?f=11&t=22784 (my old thread)
    https://github.com/mjholtzem/Unity-2D-Destruction
	http://www.alanzucconi.com/2015/02/24/to-voronoi-and-beyond/
	https://stackoverflow.com/questions/20104779/libgdx-create-texture-from-overlay-using-pixmap
	https://pvigier.github.io/2018/11/18/fortune-algorithm-details.html
    http://www-cs-students.stanford.edu/~amitp/game-programming/polygon-map-generation/
    https://leatherbee.org/index.php/2018/10/06/terrain-generation-3-voronoi-diagrams/


[...] wrap planets properly (LOCAL COORDINATE SPACE?)
    https://www.reddit.com/r/gamedev/comments/1gi6np/magic_carpet_style_infinite_wrapping_terrain/
    https://simonschreibt.de/gat/1nsane-carpet-2-repetitive-worlds/



[ ] take care of some of the todo's
    there is so much to do, and I keep adding more...




[ ] fix floating point errors in deep space caused by large world coordinates and small frame times is affecting movement physics: epsilon / truncating errors
    https://randomascii.wordpress.com/2012/02/13/dont-store-that-in-a-float/
    https://www.youtube.com/watch?v=mXTxQko-JH0&t=4m18s



[ ] new DevPlay button on title screen
    [ ] use Dev world as the one with hardcoded seed and forced test entities and forced close star system
    [ ] current play button should give random seed, no hardcoded entities. entities should come from spawning systems instead
        [ ] game start
            [ ] birth/tutorial screen
            [ ] death
    [ ] cleanup GameScreen to facilitate this
[ ] new CombatTest debug screen
    [ ] one on one with an AI for prototyping combat and movement mechanics and feel
    [ ] AI vs AI?



[ ] optimization
    [ ] fix space parallax system, generating pixmaps on the fly is slow, try to replace with shader
    [ ] look at pooled engine
    [ ] model batch
    [ ] planets are rendered offscreen needlessly -> cull frustum
    [ ] something is funny with the memory, it climbs then resets in a cyclical fashion


[...] config and loading
    //Config() { "DesktopInputSystem" = 1; "MovementSystem" = 5; }
    //
    //add systems normally
    //for each system: system.priority = config.get(system.getClass().getSimpleName())
    //
    //same for pause, a haltSystemOnPause property
    //and maybe even an input processor property with priority as well?
    //Config() { "MovementSystem": processingPriority = 5, haltOnPause = true,  }

    //on pause, for each system, if haltOnPause, pause
    System	                    Priority	HaltOnPause	    Input Processor	    Space only      World only
    DesktopInputSystem	        1	        maybe
    MobileInputSystem	        2
    AISystem	                3	        TRUE
    ControlSystem	            4	        TRUE
    MovementSystem	            5	        TRUE
    BoundsSystem	            6	        TRUE
    CollisionSystem	            7	        TRUE
    OrbitSystem	                8	        TRUE	        	                TRUE
    WorldWrapSystem	            9	        maybe	        	                	            TRUE
    CameraSystem	            10
    SpaceRenderingSystem        11	        		                            TRUE
    WorldRenderingSystem    	12	        		                            	            TRUE
    HUDSystem	                13
    ExpireSystem	            14	        TRUE
    SpaceLoadingSystem	        15	        		                            TRUE
    SpaceParallaxSystem	        16	        		                            TRUE
    ScreenTransitionSystem	    17	        TRUE
    DebugUISystem	            18


---GAMEPLAY & DESIGN---
[...] SHIPS
    [...] COMBAT
        [...] 3D roll animation for dodge / barrel roll
                [x] fix 3D texture test
                [x] integrate
                [ ] lock orientation and changes to velocity
                [...] scale bounding box during rotation
                [...] fix take off and landing shrink/grow animation
                    [x] fix crash
                    [...] sometimes model doesn't shrink, and never grows
                [ ] should use native texture size then scale the model instead?
                [ ] clean up: should move values to config
                [ ] clean up: optimize rendering -> ModelCache
                [ ] clean up: ensure proper disposal
                [x] lock facing orientation while rolling, looks funny
                [ ] mobile/touch UI way of activating dodge, a swipe on the joystick may be intuitive
        [x] shield
        [ ] bullet come from gun rather than magically from ship
        [ ] weapon types
            [x] basic cannon
            [...] grow cannon shoot circles/rectangles with radius relative to damage "weight" of projectile (damage = size * velocity * typeMultiplier)?
            [ ] L cannon, touhou style multiple bullet cannon
            [ ] Laser cannon
    [ ] engine mode:
            [x] local/combat (slow, for interacting with object near, landing planets, fighting)
            [ ] travel/cruise (medium, for navigating within a system, planet to planet, avoid/escape, faster travel)
            [ ] hyper/warp   (fast, warp to other systems, can't turn, can't fight)

    [ ] ship generation
        [ ] fix ship edges to use entire width of texture
	    [...] wings
	    [ ] engines
	    [ ] weapons
	    [ ] details: eg: lines, another layer on top for depth/windshield type thing, different stuff on underside of sprite
	    [ ] generation styles and classes, perhaps come up with some kind of classes of ships (cargo, highspeed traveler, tank/war machine, passenger, personal, commercial...)
        http://davebollinger.org/works/pixelspaceships/
        https://www.reddit.com/r/gamedev/comments/2tavse/2d_procedural_spaceship_generator/


[...] planet generation
	research planet attributes //size, temperature, pressure, atmosphere/elements(https://en.wikipedia.org/wiki/Astronomical_spectroscopy)...etc
	rings around planets? (like saturn)
	moons/satellites
	http://www.entropicparticles.com/6-days-of-creation/
	https://plaxdev.wordpress.com/2017/05/04/procedurally-generating-islands/
	https://www.reddit.com/search?q=%28perlin|simplex|opensimplex%29+noise&sort=new
	http://ronvalstar.nl/creating-tileable-noise-maps/ <--looping noise
	https://www.gamedev.net/blog/33/entry-2138456-seamless-noise/ <--looping noise
	https://gamedev.stackexchange.com/questions/23625/how-do-you-generate-tileable-perlin-noise <--looping noise
	http://developworlds.com/blog/2015/05/28/procedural-tilemap-generation/
	https://flafla2.github.io/2014/08/09/perlinnoise.html
	http://devmag.org.za/2009/04/25/perlin-noise/
	http://blog.kaelan.org/randomly-generated-world-map/ <--biome
	http://freespace.virgin.net/hugo.elias/models/m_perlin.htm
	https://www.reddit.com/user/KdotJPG   <-OpenSimplex creator https://gist.github.com/KdotJPG/b1270127455a94ac5d19

[ ] space stuff
    https://en.wikipedia.org/wiki/Astronomical_object#Categories_by_location
	-stars kill on touch
	-wormhole (teleport)
	-blackhole (death)
	-dust
	-fractal/noise
	-light specs





---DEBUG---
    [ ] in game console
        [ ] commands
    [...] engine viewer
        [x] show entities and components and component values
        [x] clean up and bit of optimization (its pretty hacky atm)
        [...] arrow navigation and menu expansion
            [x] fix some edge cases on up and down and expansion of empty nodes
            [ ] nothing select, re-select last selected / refocus
            [ ] press and hold up & down
        [ ] aesthetics and usability
            [ ] on key navigation, if selection out of scrollpane view, scroll to make it visible
            [ ] fix arrow expand image on entity node pre/post expand
            [x] smaller font
            [x] font coloring
                https://github.com/libgdx/libgdx/blob/master/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontTest.java
            [ ] fix scroll bar to show
            [ ] focus on mouse over
        [ ] options
            [ ] poll rate
            [x] toggle history highlighting
            [ ] expand all collapse all
        [...] history (like PE), if added, green for a second. if removed, red for a second
            [ ] systems should get history too, currently only entities working
            [ ] include children
        [ ] add count to system and entities node eg: Entities (57), Systems (12)
        [ ] filter for components, bonus points for values (eg: all entities with a health component where component.health > x)
        [ ] possibly a generic reflection object explorer
        [ ] watch window (when node is highlighted, on key or watch button, copy node into its own focused window (including children)
        [ ] field editing
        [ ] add / remove objects
    [ ] FPS,memory,entity graph
        [ ] profiler: https://github.com/libgdx/ashley/pull/215


---INPUT---
    [ ] keyboard navigation for menus
        [...] debug menu
        [...] main menu
            [x] hotkeys
            [ ] navigation and selection
        [ ] title menu
    [ ] controller/gamepad input support
        https://github.com/libgdx/libgdx/wiki/Controllers
	    https://gist.github.com/nhydock/dc0501f34f89686ddf34
    [ ] mobile
        [ ] if player bounds overlap vehicle, show enter button on touchUI/hud
        [ ] if in vehicle show exit button (if can get out? must be over platform/spacestation? jetpack?)
        [ ] pinch-pull to zoom in-out on touch
        [ ] test touchUI on different screen sizes/resolutions
        [ ] set engine speed max to multiplier on android?
        http://libgdx.badlogicgames.com/nightlies/docs/api/com/badlogic/gdx/input/GestureDetector.html
        http://tutorial-libgdx-android.blogspot.com/2014/02/inputs-handling-1st-part.html


---UI---
    [...] map
        needs more details, select planets and get info, set way points
    [...] menu menu
        [x] pause / freeze game
        [...] settings and config
    [ ] player manager/inventory/shipbuilder thingy
    [ ] career event timeline stats

---GRAPHICS---
[ ] particles
[ ] shaders
	https://github.com/mattdesl/lwjgl-basics/wiki/Shaders
	https://github.com/mattdesl/lwjgl-basics/wiki
	https://www.shadertoy.com/view/XscGzl <--use for stars
	http://www.alanzucconi.com/2015/07/01/vertex-and-fragment-shaders-in-unity3d/
	http://www.alanzucconi.com/2016/01/27/arrays-shaders-heatmaps-in-unity3d/
	http://wwwtyro.net/2016/10/22/2D-space-scene-procgen.html

http://devmag.org.za/2012/07/29/how-to-choose-colours-procedurally-algorithms/


//Optimization/performance:
http://t-machine.org/index.php/2014/03/08/data-structures-for-entity-systems-contiguous-memory/
http://unseen-academy.de/snippet_component_system.html
consider switch out ashley for artemis-odb? https://github.com/junkdog/entity-system-benchmarks#entity-system-benchmarks

//fonts
http://www.fontsquirrel.com/




